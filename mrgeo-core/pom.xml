<?xml version="1.0" encoding="UTF-8"?>
<!--
     ~ Copyright 2009-2014 DigitalGlobe, Inc.
     ~
     ~ Licensed under the Apache License, Version 2.0 (the "License");
     ~ you may not use this file except in compliance with the License.
     ~ You may obtain a copy of the License at
     ~
     ~ http://www.apache.org/licenses/LICENSE-2.0
     ~
     ~ Unless required by applicable law or agreed to in writing, software
     ~ distributed under the License is distributed on an "AS IS" BASIS,
     ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     ~ See the License for the specific language governing permissions and limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.mrgeo</groupId>
    <artifactId>mrgeo</artifactId>
    <version>0.5.0-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>
  <artifactId>mrgeo-core</artifactId>
  <packaging>jar</packaging>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <generatedResources>${project.build.directory}/generated-resources</generatedResources>
  </properties>
  <name>mrgeo-core</name>
  <url>http://mrgeo.org</url>
  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>
  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <directory>${generatedResources}</directory>
        <includes>
          <include>**/*.properties</include>
        </includes>
      </resource>
    </resources>
    <plugins>
      <!-- Include Scala in this project -->
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
      </plugin>
      <!-- Unit Test plugin -->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skipTests>${skip.mrgeo.core.tests}</skipTests>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <skipTests>${skip.mrgeo.core.integration.tests}</skipTests>
        </configuration>
      </plugin>
      <!-- generate dependency versions -->
      <plugin>
        <groupId>org.apache.servicemix.tooling</groupId>
        <artifactId>depends-maven-plugin</artifactId>
        <version>1.2</version>
        <executions>
          <execution>
            <id>generate-depends-file</id>
            <goals>
              <goal>generate-depends-file</goal>
            </goals>
            <configuration>
              <outputFile>${generatedResources}/org/mrgeo/utils/${project.artifactId}-dependencies.properties</outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.3</version>
        <configuration>
          <finalName>${project.artifactId}-${project.parent.version}</finalName>
        </configuration>
        <executions>
          <execution>
            <id>side-by-side</id>
            <phase>deploy</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/dist.xml</descriptor>
              </descriptors>
              <appendAssemblyId>false</appendAssemblyId>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- build the effective pom -->
      <!--
           <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-help-plugin</artifactId>
           <version>2.2</version>
           <executions>
           <execution>
           <id>generate-effective-pom</id>
           <phase>package</phase>
           <goals>
           <goal>effective-pom</goal>
           </goals>
           <configuration>
           <output>${project.build.directory}/generated-sources/effective-pom.xml</output>
           </configuration>
           </execution>
           </executions>
           </plugin>
      -->
      <!-- install the effective pom -->
      <!--
           <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-install-plugin</artifactId>
           <version>2.5.1</version>
           <executions>
           <execution>
           <id>install-effective-pom</id>
           <goals>
           <goal>install-file</goal>
           </goals>
           <phase>install</phase>
           <configuration>
           <pomFile>${project.build.directory}/generated-sources/effective-pom.xml</pomFile>
           <file>${project.build.directory}/${project.build.finalName}.${project.packaging}</file>
           </configuration>
           </execution>
           </executions>
           </plugin>
           <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-source-plugin</artifactId>
           <version>2.2.1</version>
           <executions>
           <execution>
           <id>generate-sources</id>
           <phase>deploy</phase>
           <goals>
           <goal>jar</goal>
           </goals>
           <configuration>
           <outputDirectory>${project.build.directory}</outputDirectory>
           <attach>true</attach>
           </configuration>
           </execution>
           <execution>
           <id>generate-test-sources</id>
           <phase>deploy</phase>
           <goals>
           <goal>test-jar</goal>
           </goals>
           <configuration>
           <outputDirectory>${project.build.directory}</outputDirectory>
           <attach>true</attach>
           </configuration>
           </execution>
           </executions>
           </plugin>
           <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-javadoc-plugin</artifactId>
           <version>2.9.1</version>
           <executions>
           <execution>
           <id>attach-javadocs</id>
           <phase>deploy</phase>
           <goals>
           <goal>jar</goal>
           </goals>
           </execution>
           </executions>
           </plugin>
      -->
      <!-- Make some soft links for the generated products, for convenience -->
      <plugin>
        <groupId>com.pyx4j</groupId>
        <artifactId>maven-junction-plugin</artifactId>
        <version>1.0.3</version>
        <executions>
          <execution>
            <id>link-core</id>
            <phase>package</phase>
            <goals>
              <goal>link</goal>
            </goals>
          </execution>
          <execution>
            <id>unlink</id>
            <phase>clean</phase>
            <goals>
              <goal>unlink</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <links>
            <link>
              <src>${project.build.directory}/${project.build.finalName}.${project.packaging}</src>
              <dst>${project.build.directory}/${project.artifactId}.${project.packaging}</dst>
            </link>
            <link>
              <src>${project.build.directory}/${project.build.finalName}-tests.${project.packaging}</src>
              <dst>${project.build.directory}/${project.artifactId}-tests.${project.packaging}</dst>
            </link>
          </links>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>run-shading</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>shade</goal>
                </goals>
                <configuration>
                  <finalName>${project.artifactId}-${project.parent.version}-jar-with-dependencies</finalName>
                  <shadedArtifactAttached>true</shadedArtifactAttached>
                  <generateUniqueDependencyReducedPom>true</generateUniqueDependencyReducedPom>
                  <artifactSet>
				  <includes>
					<include>*</include>
				  </includes>
				  <excludes>
					  <exclude>org.spark-project:unused</exclude>
				  </excludes>
				</artifactSet>
                  <transformers>
                    <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                    <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                      <manifestEntries>
                        <Specification-Title>Java Advanced Imaging Image I/O Tools</Specification-Title>
                        <Specification-Version>1.1</Specification-Version>
                        <Specification-Vendor>Sun Microsystems, Inc.</Specification-Vendor>
                        <Implementation-Title>com.sun.media.imageio</Implementation-Title>
                        <Implementation-Version>1.1</Implementation-Version>
                        <Implementation-Vendor>Sun Microsystems, Inc.</Implementation-Vendor>
                        <Extension-Name>com.sun.media.imageio</Extension-Name>
                        <Sealed>true</Sealed>
                      </manifestEntries>
                    </transformer>
                    <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                      <resource>META-INF/spring.handlers</resource>
                    </transformer>
                    <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                      <resource>META-INF/spring.schemas</resource>
                    </transformer>
                  </transformers>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>cpsuite</groupId>
      <artifactId>cpsuite</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-core-asl</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>com.vividsolutions</groupId>
      <artifactId>jts</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
    </dependency>
    <dependency>
      <groupId>org.reflections</groupId>
      <artifactId>reflections</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-opengis</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-coverage</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jaitools</groupId>
      <artifactId>jt-utils</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jaitools</groupId>
      <artifactId>jt-zonalstats</artifactId>
    </dependency>
    <dependency>
      <groupId>java3d</groupId>
      <artifactId>vecmath</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.media</groupId>
      <artifactId>jai_codec</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.media</groupId>
      <artifactId>jai_core</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.media</groupId>
      <artifactId>jai_imageio</artifactId>
    </dependency>
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>xml-apis</groupId>
      <artifactId>xml-apis</artifactId>
    </dependency>
    <dependency>
      <groupId>geotiff</groupId>
      <artifactId>geotiff-jai</artifactId>
    </dependency>
    <dependency>
      <groupId>xtiff-jai</groupId>
      <artifactId>xtiff-jai</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-jexl</artifactId>
    </dependency>
    <!-- annoys me that we have to add specific jboss dependencies -->
    <dependency>
      <groupId>org.jboss</groupId>
      <artifactId>jboss-vfs</artifactId>
    </dependency>
    <!-- end annoyance -->
    <!-- Scala/spark dependencies -->
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-streaming_2.10</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-graphx_2.10</artifactId>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
    </dependency>
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_2.10</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-streaming_2.10</artifactId>
    </dependency>
    <dependency>
      <groupId>com.esotericsoftware.kryo</groupId>
      <artifactId>kryo</artifactId>
    </dependency>
    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xercesImpl</artifactId>
    </dependency>
  </dependencies>
</project>
